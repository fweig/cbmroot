{ decls }
namespace AnalysisTree {  }
namespace AnalysisTree { template <typename T> class VectorConfig; }
namespace AnalysisTree { class Track; }
namespace AnalysisTree { template <typename T> class Detector; }
namespace AnalysisTree { class Module; }
namespace AnalysisTree { class ModulePosition; }
namespace AnalysisTree { class Hit; }
namespace AnalysisTree { class Particle; }
namespace AnalysisTree { class Container; }

[ libAnalysisTreeBase.so ]
# List of selected classes
class AnalysisTree::BranchConfig
class AnalysisTree::ConfigElement
class AnalysisTree::Configuration
class AnalysisTree::Configuration_v3
class AnalysisTree::Container
class AnalysisTree::DataHeader
class AnalysisTree::Detector<AnalysisTree::Container>
class AnalysisTree::Detector<AnalysisTree::Hit>
class AnalysisTree::Detector<AnalysisTree::Module>
class AnalysisTree::Detector<AnalysisTree::ModulePosition>
class AnalysisTree::Detector<AnalysisTree::Particle>
class AnalysisTree::Detector<AnalysisTree::Track>
class AnalysisTree::EventHeader
class AnalysisTree::Hit
class AnalysisTree::IndexAccessor
class AnalysisTree::IndexedObject
class AnalysisTree::Matching
class AnalysisTree::MatchingConfig
class AnalysisTree::Module
class AnalysisTree::ModulePosition
class AnalysisTree::Particle
class AnalysisTree::Track
class AnalysisTree::VectorConfig<bool>
class AnalysisTree::VectorConfig<float>
class AnalysisTree::VectorConfig<int>
header BranchConfig.hpp
header Configuration.hpp
header Container.hpp
header DataHeader.hpp
header EventHeader.hpp
header Hit.hpp
header IndexedObject.hpp
header Matching.hpp
header Module.hpp
header Particle.hpp
header Track.hpp
# List of selected namespaces
namespace AnalysisTree
# List of selected typedefs and outer classes
typedef AnalysisTree::TrackDetector
typedef AnalysisTree::ModuleDetector
typedef AnalysisTree::ModulePositions
typedef AnalysisTree::HitDetector
typedef AnalysisTree::Particles
